Index: src/main/java/org/example/model/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/Product.java b/src/main/java/org/example/model/Product.java
--- a/src/main/java/org/example/model/Product.java	
+++ b/src/main/java/org/example/model/Product.java	
@@ -1,5 +1,12 @@
 package org.example.model;
 
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
 public class Product {
     private  String name;
     private double price;
Index: src/main/java/org/example/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/User.java b/src/main/java/org/example/model/User.java
--- a/src/main/java/org/example/model/User.java	
+++ b/src/main/java/org/example/model/User.java	
@@ -1,10 +1,19 @@
 package org.example.model;
 
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
 import java.util.List;
+@Getter
+@Setter
+@ToString
 
 public class User {
     private long chatId;
     private String step;
     private String name;
-    private List<Product> products;
+    private List<Product> bin;
+
+
 }
Index: src/main/java/org/example/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/service/UserService.java b/src/main/java/org/example/service/UserService.java
--- a/src/main/java/org/example/service/UserService.java	
+++ b/src/main/java/org/example/service/UserService.java	
@@ -1,5 +1,37 @@
 package org.example.service;
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+import org.example.model.User;
+import java.io.*;
+import java.util.ArrayList;
+import java.util.List;
+import static org.example.dataBase.DataBase.*;
 
 public class UserService {
 
+   private static final Gson gson =new GsonBuilder().setPrettyPrinting().create();
+    public boolean addUser(User user){
+        try {
+            filePackage.mkdirs();
+            fileUsersProducts.createNewFile();
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+       users = redFileUsers();
+        if(users == null){
+            List<User> usersTemp = new ArrayList<>();
+            usersTemp.add(user);
+            users = usersTemp;
+            toJsonUsers(users);
+            return true;
+        }
+       for(User user1 : users){
+           if(user1.getChatId()!=user.getChatId()){
+               users.add(user);
+               toJsonUsers(users);
+               return true;
+           }
+       }
+        return false;
+    }
 }
Index: src/main/java/org/example/service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/service/ProductService.java b/src/main/java/org/example/service/ProductService.java
--- a/src/main/java/org/example/service/ProductService.java	
+++ b/src/main/java/org/example/service/ProductService.java	
@@ -1,5 +1,64 @@
 package org.example.service;
 
+import org.example.dataBase.DataBase;
+import org.example.model.Food;
+import org.example.model.Product;
+import org.example.model.User;
+
+import java.util.ArrayList;
+import java.util.List;
+
 public class ProductService {
+    static List<User> users = DataBase.redFileUsers();
+    static List<Food> foods = DataBase.readFoodsFile();
+    static List<Product> products = new ArrayList<>();
+    public boolean addProducts(double chatId,Product product){
+        users = DataBase.redFileUsers();
+        if(users == null){
+            return false;
+        }
+        for (User user:users) {
+            if(user.getChatId()==chatId){
+                if(user.getBin()==null){
+                    List<Product> productsTemp = new ArrayList<>();
+                    productsTemp.add(product);
+                    products = productsTemp;
+                    user.setBin(products);
+                    DataBase.toJsonUsers(users);
+                    return true;
+                }
+                products = user.getBin();
+                products.add(product);
+                user.setBin(products);
+                DataBase.toJsonUsers(users);
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public boolean addFoods(Food food){
+        if(foods == null){
+            List<Food> foodsTemp = new ArrayList<>();
+            foodsTemp.add(food);
+            foods = foodsTemp;
+            DataBase.toJsonFood(foods);
+            return true;
+        }
+        foods.add(food);
+        DataBase.toJsonFood(foods);
+        return true;
+    }
+    public List<Product> getProducts(double chatId){
+        if(users==null){
+            return null;
+        }
+        for (User user:users) {
+            if(user.getChatId()==chatId){
+              return user.getBin();
+            }
+        }
+        return null;
+    }
 
 }
Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	
+++ b/src/main/java/org/example/Main.java	
@@ -1,13 +1,74 @@
 package org.example;
 
-import org.example.base.MyBot;
-import org.telegram.telegrambots.meta.TelegramBotsApi;
+import org.example.dataBase.DataBase;
+import org.example.model.Food;
+import org.example.model.Product;
+import org.example.model.User;
+import org.example.service.ProductService;
+import org.example.service.UserService;
 import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
-import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;
+
+import java.util.Scanner;
 
 public class Main {
+   static UserService userService = new UserService();
+   static ProductService productService = new ProductService();
+   static Scanner scannerStr = new Scanner(System.in);
+   static Scanner scannerNum = new Scanner(System.in);
     public static void main(String[] args) throws TelegramApiException {
-        TelegramBotsApi telegramBotsApi=new TelegramBotsApi(DefaultBotSession.class);
-        telegramBotsApi.registerBot(new MyBot());
+//
+        byte var1= 1;
+
+        while (var1!=0){
+            System.out.println("add user -->1 add user products -->2 get user products -->3 add food->4 show foods->5");
+           var1 = scannerNum.nextByte();
+           switch (var1){
+               case 1->{
+                   User user = new User();
+                   System.out.println("enter chatID ");
+                   user.setChatId(scannerNum.nextLong());
+
+                   System.out.println("enter name");
+                   user.setName(scannerStr.nextLine());
+
+                   userService.addUser(user);
+               }
+               case 2->{
+                   Product product = new Product();
+
+                   System.out.println("inter chatID");
+                   long chatId = scannerNum.nextLong();
+
+                   System.out.println("enter name ");
+                   product.setName(scannerStr.nextLine());
+
+                   System.out.println("enter price");
+                   product.setPrice(scannerNum.nextDouble());
+                   productService.addProducts(chatId,product);
+               }
+               case 3->{
+                   System.out.println("enter chatID ");
+                   long chatId = scannerNum.nextLong();
+
+                   System.out.println(productService.getProducts(chatId));
+               }
+               case 4->{
+                   Food food = new Food();
+                   System.out.println("enter food name");
+                   food.setName(scannerStr.nextLine());
+                   System.out.println("enter food type");
+                   food.setType(scannerStr.nextLine());
+                   System.out.println("enter food price");
+                   food.setPrice(scannerNum.nextDouble());
+                   productService.addFoods(food);
+
+               }
+               case 5-> {
+                   System.out.println(DataBase.readFoodsFile());
+               }
+           }
+        }
+
     }
+
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a4fc9641-2316-4031-ab2f-43e46a63fd9e" name="Changes" comment="upload" />
+    <list default="true" id="a4fc9641-2316-4031-ab2f-43e46a63fd9e" name="Changes" comment="upload">
+      <change afterPath="$PROJECT_DIR$/file/foodsFileJson.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/file/usersFile.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/dataBase/DataBase.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/model/Food.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/base/MyBot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/base/MyBot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/Product.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/Product.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/service/ProductService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/service/ProductService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/service/UserService.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -20,7 +33,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="Ravshanbek" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -35,12 +48,12 @@
               <option name="branches">
                 <list>
                   <RecentBranch>
-                    <option name="branchName" value="Ravshanbek" />
-                    <option name="lastUsedInstant" value="1667879309" />
+                    <option name="branchName" value="master" />
+                    <option name="lastUsedInstant" value="1667883865" />
                   </RecentBranch>
                   <RecentBranch>
-                    <option name="branchName" value="master" />
-                    <option name="lastUsedInstant" value="1667879308" />
+                    <option name="branchName" value="Ravshanbek" />
+                    <option name="lastUsedInstant" value="1667879309" />
                   </RecentBranch>
                 </list>
               </option>
@@ -55,12 +68,15 @@
     <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="2HDfzlimAAwNjtHVkWIO2djBl8v" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
@@ -72,6 +88,19 @@
   }
 }</component>
   <component name="RunManager">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.example.Main" />
+      <module name="Order_Food" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.example.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration default="true" type="JetRunConfigurationType">
       <method v="2">
         <option name="Make" enabled="true" />
@@ -83,6 +112,11 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -95,6 +129,12 @@
       <workItem from="1667825778955" duration="688000" />
       <workItem from="1667879123345" duration="680000" />
       <workItem from="1667883285499" duration="340000" />
+      <workItem from="1667885115665" duration="6262000" />
+      <workItem from="1667899563676" duration="7000" />
+      <workItem from="1667901292191" duration="4813000" />
+      <workItem from="1667936804857" duration="10485000" />
+      <workItem from="1667978140424" duration="1656000" />
+      <workItem from="1667987839892" duration="9342000" />
     </task>
     <task id="LOCAL-00001" summary="git">
       <created>1667825893927</created>
@@ -135,9 +175,20 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <MESSAGE value="git" />
     <MESSAGE value="r push" />
     <MESSAGE value="upload" />
     <option name="LAST_COMMIT_MESSAGE" value="upload" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.ExceptionInInitializerError" package="java.lang" />
+          <option name="timeStamp" value="1" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: file/foodsFileJson.txt
===================================================================
diff --git a/file/foodsFileJson.txt b/file/foodsFileJson.txt
new file mode 100644
--- /dev/null	
+++ b/file/foodsFileJson.txt	
@@ -0,0 +1,198 @@
+[
+  {
+    "name": "PIZZA",
+    "type": "fast",
+    "price": 63000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_2.jpg",
+    "content": "\u0027PIZZA\u0027 \n\n PIZZA 🍕 \n \n narxi: 63000"
+  },
+  {
+    "name": "HotDOG",
+    "type": "fast",
+    "price": 26000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_3.jpg",
+    "content": "\u0027HotDOG\u0027 \n HotDOG 🌭 \n \n narxi: 26000"
+  },
+  {
+    "name": "GamburGer",
+    "type": "fast",
+    "price": 25000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_4.jpg",
+    "content": "\u0027GamburGer\u0027 \n GamburGer 🍔 \n \n narxi: 25000"
+  },
+  {
+    "name": "To\u0027plam",
+    "type": "fast",
+    "price": 99000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_6.jpg",
+    "content": "To\u0027plam \n \u0027To\u0027plam\u0027 🍱\n 2ta Gamburger 🍔\n KFC 🍗 va Chipslar 🍟 "
+  },
+  {
+    "name": "Non",
+    "type": "non",
+    "price": 4000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_7.jpg",
+    "content": "Non\n \u0027Non\u0027 🥐 \n \n narxi: 4000"
+  },
+  {
+    "name": "Sho\u0027rva",
+    "type": "milliy",
+    "price": 23000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_8.jpg",
+    "content": "Sho\u0027rva\n \u0027Sho\u0027rva\u0027 🍲 \n \n narxi: 23000"
+  },
+  {
+    "name": "Somsa",
+    "type": "milliy",
+    "price": 7000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_9.jpg",
+    "content": "Somsa \n \u0027Somsa\u0027 \n \n narxi: 7000"
+  },
+  {
+    "name": "Shilpildoq",
+    "type": "milliy",
+    "price": 56000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_10.jpg",
+    "content": "Shilpildoq \n \u0027Shilpildoq\u0027 \n \n narxi: 56000"
+  },
+  {
+    "name": "QozonKabob",
+    "type": "milliy",
+    "price": 42000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_11.jpg",
+    "content": "Qazon Kabob \n \u0027Qazon Kabob\u0027 \n \n narxi: 42000"
+  },
+  {
+    "name": "Lag\u0027mon",
+    "type": "milliy",
+    "price": 23000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_12.jpg",
+    "content": "Lag\u0027mon \n \u0027Lag\u0027mon\u0027 🍜 \n \n narxi: 23000"
+  },
+  {
+    "name": "Osh",
+    "type": "milliy",
+    "price": 25000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_13.jpg",
+    "content": "Osh \n \u0027Osh\u0027 \n \n narxi: 25000"
+  },
+  {
+    "name": "Shashlik",
+    "type": "milliy",
+    "price": 18000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_14.jpg",
+    "content": "Shashlik \n \u0027Shashlik\u0027 \n \n narxi: 18000"
+  },
+  {
+    "name": "Oliviya",
+    "type": "salat",
+    "price": 18000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_15.jpg",
+    "content": "Oliviya salat \n \u0027Oliviya salti\u0027 \n \n narxi: 18000"
+  },
+  {
+    "name": "Barbikiu",
+    "type": "milliy",
+    "price": 28000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_16.jpg",
+    "content": "Barbikiu \n \u0027Barbikiu\u0027 \n \n narxi: 28000"
+  },
+  {
+    "name": "ChickenSalat",
+    "type": "salat",
+    "price": 22000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_22.jpg",
+    "content": "Chicken Salat \n \u0027Chicken salat\u0027 \n \n narxi: 20000"
+  },
+  {
+    "name": "Salat",
+    "type": "salat",
+    "price": 12000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_23.jpg",
+    "content": "Salat \n \u0027Salat\u0027 🍅 \n \n narxi: 12000"
+  },
+  {
+    "name": "SmokedSalat",
+    "type": "salat",
+    "price": 23000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_25.jpg",
+    "content": "Smoked Salad \n \u0027Smoked\u0027 \n \n narxi: 23000"
+  },
+  {
+    "name": "Cofe",
+    "type": "ichimlik",
+    "price": 5000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_26.jpg",
+    "content": "Cofe ☕️\n \n narxi: 5000"
+  },
+  {
+    "name": "Choy",
+    "type": "ichimlik",
+    "price": 2000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_27.jpg",
+    "content": "Choy 🫖 \n \n narxi: 2000"
+  },
+  {
+    "name": "Pepsi",
+    "type": "ichimlik",
+    "price": 3500.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_28.jpg",
+    "content": "Pepsi 🥃 \n \n narxi: 3500"
+  },
+  {
+    "name": "CocaCola",
+    "type": "ichimlik",
+    "price": 3500.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_29.jpg",
+    "content": "CocaCola 🥃 \n \n narxi: 3500"
+  },
+  {
+    "name": "Lavash",
+    "type": "fast",
+    "price": 24000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_30.jpg",
+    "content": "Lavash \n \u0027Lavash\u0027 🌯 \n \n narxi: 24000"
+  },
+  {
+    "name": "Sandwich",
+    "type": "fast",
+    "price": 18000.0,
+    "amount": 1,
+    "url": "https://api.telegram.org/file/bot5419150140:AAGDeNrHa_xZz8vZ__40z2XPYdBBXKOhT9o/photos/file_31.jpg",
+    "content": "Sandwich \n \u0027Sandwich\u0027 🥪 \n \n narxi: 18000"
+  },
+  {
+    "name": "rhtsf",
+    "type": "",
+    "price": 0.0,
+    "amount": 0
+  },
+  {
+    "name": "erty",
+    "type": "food",
+    "price": 23456.0,
+    "amount": 0
+  }
+]
\ No newline at end of file
Index: file/usersFile.txt
===================================================================
diff --git a/file/usersFile.txt b/file/usersFile.txt
new file mode 100644
--- /dev/null	
+++ b/file/usersFile.txt	
@@ -0,0 +1,17 @@
+[
+  {
+    "chatId": 23,
+    "name": "4"
+  },
+  {
+    "chatId": 234,
+    "name": "r",
+    "bin": [
+      {
+        "name": "gjiew",
+        "price": 23456.0,
+        "amount": 0
+      }
+    ]
+  }
+]
\ No newline at end of file
Index: src/main/java/org/example/model/Food.java
===================================================================
diff --git a/src/main/java/org/example/model/Food.java b/src/main/java/org/example/model/Food.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/model/Food.java	
@@ -0,0 +1,17 @@
+package org.example.model;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
+public class Food {
+    private String name;
+    private String type;
+    private double price;
+    private int amount;
+    private String url;
+    private String content;
+}
Index: src/main/java/org/example/dataBase/DataBase.java
===================================================================
diff --git a/src/main/java/org/example/dataBase/DataBase.java b/src/main/java/org/example/dataBase/DataBase.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/dataBase/DataBase.java	
@@ -0,0 +1,65 @@
+package org.example.dataBase;
+
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+import com.google.gson.reflect.TypeToken;
+import org.example.model.Food;
+import org.example.model.User;
+
+import java.io.*;
+import java.util.ArrayList;
+import java.util.List;
+
+public abstract class DataBase {
+    private static Gson gson =new GsonBuilder().setPrettyPrinting().create();
+    public static File filePackage = new File("file");
+    private static final String URLUserFile = filePackage.getName()+"/usersFile.txt";
+    private static final String URLFoodsFile = filePackage.getName()+"/foodsFileJson.txt";
+    public static File fileUsersProducts = new File(URLUserFile);
+    public static File fileFoods = new File(URLFoodsFile);
+    public static List<User> users = new ArrayList<>();
+    public static List<Food> foods = new ArrayList<>();
+    public static void toJsonUsers(List<User> users1){
+        String s = gson.toJson(users1);
+        try (
+                BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(fileUsersProducts))
+        ){
+            bufferedWriter.write(s);
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+    public static List<User> redFileUsers() {
+        if(filePackage.isDirectory() && fileUsersProducts.exists()) {
+            try {
+                users = gson.fromJson(new FileReader(URLUserFile), new TypeToken<List<User>>() {
+                }.getType());
+            } catch (FileNotFoundException e) {
+                throw new RuntimeException(e);
+            }
+        }
+        return users;
+    }
+
+    public static List<Food> readFoodsFile(){
+        if(filePackage.isDirectory()&& fileFoods.exists()){
+            try {
+                foods = gson.fromJson(new FileReader(URLFoodsFile),new TypeToken<List<Food>>(){}.getType());
+            } catch (FileNotFoundException e) {
+                throw new RuntimeException(e);
+            }
+        }
+        return foods;
+    }
+    public static void toJsonFood(List<Food> foods1){
+        String str = gson.toJson(foods1);
+        try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(fileFoods))){
+            bufferedWriter.write(str);
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+
+
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -37,6 +37,14 @@
             <artifactId>gson</artifactId>
             <version>2.10</version>
         </dependency>
+        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi-ooxml</artifactId>
+            <version>5.2.3</version>
+        </dependency>
+
+
     </dependencies>
 
 </project>
\ No newline at end of file
